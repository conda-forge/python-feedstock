From accbf978bd63c373d69a72f847859f94a0bf3139 Mon Sep 17 00:00:00 2001
From: Ray Donnelly <mingw.android@gmail.com>
Date: Mon, 24 Feb 2020 00:42:36 +0100
Subject: [PATCH 27/27] Add CONDA_DLL_SEARCH_MODIFICATION_KEEP_GIL

LIEF crashes because Python code gets called from its initialization code (CreateModule2 gets called, more?)

There really isn't any way to get the ProcAddress without allowing static initialization to happen and
for LIEF, that calls back into Python. It is unclear why this isn't a problem for other extension modules.

That is the next point of attack.
---
 Python/dynload_win.c | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

diff --git a/Python/dynload_win.c b/Python/dynload_win.c
index 4091efcd51..b346bd3c68 100644
--- a/Python/dynload_win.c
+++ b/Python/dynload_win.c
@@ -191,6 +191,7 @@ dl_funcptr _PyImport_FindSharedFuncptrWindows(const char *prefix,
         ULONG_PTR cookie = 0;
 #endif
         int debug_it = _wgetenv(L"CONDA_DEBUG_INTERP_STATE") ? 1 : 0;
+        int keep_gil = _wgetenv(L"CONDA_DLL_SEARCH_MODIFICATION_KEEP_GIL") ? 1 : 0;
         PyInterpreterState* ts = 0;
 
         /* Don't display a message box when Python can't load a DLL */
@@ -232,7 +233,9 @@ dl_funcptr _PyImport_FindSharedFuncptrWindows(const char *prefix,
             }
         }
 
-        Py_BEGIN_ALLOW_THREADS
+        if (!keep_gil) {
+            Py_BEGIN_ALLOW_THREADS
+        }
 
         if (debug_it) {
             ts = _PyInterpreterState_Get();
@@ -259,7 +262,9 @@ dl_funcptr _PyImport_FindSharedFuncptrWindows(const char *prefix,
             }
         }
 
-        Py_END_ALLOW_THREADS
+        if (!keep_gil) {
+            Py_END_ALLOW_THREADS
+        }
 
         if (debug_it) {
             ts = _PyInterpreterState_Get();
-- 
2.25.0

