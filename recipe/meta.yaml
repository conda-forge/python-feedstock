{% set version = "3.6.10" %}

package:
  name: python
  version: {{ version }}

source:
  - url: https://www.python.org/ftp/python/{{ version }}/Python-{{ version }}.tar.xz
    sha256: 0a833c398ac8cd7c5538f7232d8531afef943c60495c504484f308dac3af40de
    patches:
      {% if 'toolchain' in compiler('c') %}
      # use one set of patches for the toolchain (old compiler) build

      - omit-local-site-packages.patch  # [osx]
      - osx64-dist.patch                # [osx and x86_64]
      - win-find_exe.patch              # [win]
      - win-library_bin.patch           # [win]
      # Adjust FD_SETSIZE to allow select() to wait on more connections
      # simultaneously.  Desirable for serious use of Tornado on Windows.
      # See also:
      # - https://bugs.python.org/issue28708
      # - https://github.com/zeromq/libzmq/issues/1165
      - fd_setsize.patch                # [win]
      - mingw-w64--DMS_WINXX.patch
      - win-msc_ver-1900.patch
      - fix-ABI-issue29943.patch
      - do-not-download-externals.patch  # [win]
      - toolchain_0015-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch
      - winsdk.patch                     # [win]
      - 0020-Use-ranlib-from-env-if-env-variable-is-set.patch
      {% else %}
      # use another set of patches for the gcc (new compiler) build
      # these are the same patches as used in the AnacondaRecipes feedstock

      # This does a weird thing on conda-forge.  disable for now.
      # - 0001-Add-Anaconda-Distribution-version-logic.patch
      - 0002-Darwin-Omit-PYTHONFRAMEWORK-site-packages.patch
      - 0003-Darwin-Add-arch-x86_64-to-UnicCCompiler-ld_args.patch
      - 0004-Win32-distutils-Also-look-for-executable.bat.patch
      # TODO :: This breaks conda activate and deactivate.
      - 0005-Win32-Ensure-Library-bin-is-in-os.environ-PATH.patch
      - 0006-Win32-Change-FD_SETSIZE-from-512-to-2048.patch
      - 0007-Win32-distutils-Add-support-to-cygwinccompiler-for-V.patch
      - 0008-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch
      - 0009-Support-cross-compiling-byte-code.patch
      - 0010-Win32-Fixes-for-Windows-GCC-interop-needed-by-RPy2-a.patch
      - 0011-Darwin-Look-in-sysroot-usr-lib-include-if-sysroot-is.patch
      - 0012-runtime_library_dir_option-Use-1st-word-of-CC-as-com.patch
      - 0013-Win32-Do-not-download-externals.patch
      - 0014-Add-support-for-_CONDA_PYTHON_SYSCONFIGDATA_NAME-if-.patch
      - 0015-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch
      - 0016-Disable-new-dtags-in-unixccompiler.py.patch
      - 0017-Fix-cross-compilation-on-Debian-based-distros.patch
      # AppVeyor does not have the proper Win SDK installed
      - winsdk.patch  # [win]
      - 0020-Use-ranlib-from-env-if-env-variable-is-set.patch
      {% endif %}

  # TODO :: Depend on our own packages for these:
  - url: https://github.com/python/cpython-source-deps/archive/xz-5.2.2.zip          # [win]
    folder: externals/xz-5.2.2                                                       # [win]
    sha256: 02b6d6f1e0369940e7e1f0d324992e069d09f5f3d32d86e2d22cd8b82ac3fb3f         # [win]
  - url: https://github.com/python/cpython-source-deps/archive/tcl-core-8.6.6.0.zip  # [win]
    folder: externals/tcl-core-8.6.6.0                                               # [win]
    sha256: fdb503d5facf337fe23e30c6b15f1e64b148c6156747c20d01c1f1e90f3693c5         # [win]
  - url: https://github.com/python/cpython-source-deps/archive/tk-8.6.6.0.zip        # [win]
    folder: externals/tk-8.6.6.0                                                     # [win]
    sha256: 22c782693dc82e47385ffee80282daeb5e16f32aab306d100511f0be2243d764         # [win]
  - url: https://github.com/python/cpython-source-deps/archive/tix-8.4.3.6.zip       # [win]
    folder: externals/tix-8.4.3.6                                                    # [win]
    sha256: e558e3dc5e67ac0942f8fceafce00ca46b177da9ebeaf38ec7fafd9b9913ac56         # [win]
  - url: https://github.com/python/cpython-source-deps/archive/sqlite-3.21.0.0.zip   # [win]
    folder: externals/sqlite-3.21.0.0                                                # [win]
    sha256: 95a4f2d76aeeb68b51239340e3de26e5714ecfb7c8ad82a67b17af82213a8c20         # [win]
  - url: https://github.com/python/cpython-source-deps/archive/openssl-1.0.2q.zip    # [win]
    folder: externals/openssl-1.0.2q                                                 # [win]
    sha256: d0e7bc44ab7ea2d43837ccc648a6f94702f3bad870318c0c8c771afd9c347d16         # [win]
  - url: https://github.com/python/cpython-source-deps/archive/bzip2-1.0.6.zip       # [win]
    folder: externals/bzip2-1.0.6                                                    # [win]
    sha256: c42fd1432a2667b964a74bc423bb7485059c4a6d5dc92946d59dbf9a6bdb988d         # [win]
  - url: https://github.com/python/cpython-bin-deps/archive/nasm-2.11.06.zip         # [win]
    folder: externals/nasm-2.11.06                                                   # [win]
    sha256: de3c87b26a80e789986d8e6950c6304175d3829afe9c6c7211eb7257266ab0ac         # [win]

build:
  number: 1012
  # Windows has issues updating python if conda is using files itself.
  # Copy rather than link.
  no_link:
    - DLLs/_ctypes.pyd  # [win]
    - bin/python3.6     # [unix]
  # script_env:
  #   - python_branding
  # We delete the shared libraries.
  ignore_run_exports:   # [unix]
    - bzip2             # [unix]
  # match python.org compiler standard
  skip: True            # [win and vc != 14]
  string: cpython_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}
  run_exports:
    noarch:
      - python
    weak:
      - python_abi 3.6.* *_cp36m


requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ cdt('xorg-x11-proto-devel') }}  # [linux]
    - {{ cdt('libx11-devel') }}          # [linux]
    - make                               # [unix]
    - pkg-config                         # [unix]
    - llvm-tools                         # [osx]
    - m2-patch                           # [win]
  host:
    - bzip2                              # [unix]
    - sqlite                             # [unix]
    - xz                                 # [unix]
    - zlib                               # [unix]
    - openssl                            # [unix]
    - readline                           # [unix]
    - tk                                 # [unix]
    - ncurses                            # [unix]
    - libffi                             # [unix]
    - ld_impl_{{ target_platform }}      # [linux]
  run:
    - ncurses                            # [unix]
    - ld_impl_{{ target_platform }}      # [linux]
  run_constrained:
    - python_abi 3.6.* *_cp36m


test:
  commands:
    - python -V
    - python3 -V            # [unix]
    - 2to3 -h
    - pydoc -h
    - python3-config --help  # [unix]
    - python -c "import sysconfig; print(sysconfig.get_config_var('CC'))"
    {% if 'toolchain' not in compiler('c') %}
    -  _CONDA_PYTHON_SYSCONFIGDATA_NAME=_sysconfigdata_x86_64_conda_cos6_linux_gnu python -c "import sysconfig; print(sysconfig.get_config_var('CC'))"  # [linux64]
    {% endif %}
    # Test for " -partition=none", can be removed after toolchain is dropped
    - python -c "import sys; files = [f for f in sys.argv[2:] if ' -partition=none' in open(f, 'r').read()]; assert len(files) == 0, files" ${PREFIX}/lib/*/*.py  # [unix]
    - test -f ${PREFIX}/lib/libpython3.6m.so      # [linux] 
    - test -f ${PREFIX}/lib/libpython3.6m.dylib   # [osx] 
    - test ! -f default.profraw   # [osx]
      

about:
  home: http://www.python.org/
  license: Python-2.0
  license_file: LICENSE
  summary: General purpose programming language
  description: |
    Python is a widely used high-level, general-purpose, interpreted, dynamic
    programming language. Its design philosophy emphasizes code
    readability, and its syntax allows programmers to express concepts in
    fewer lines of code than would be possible in languages such as C++ or
    Java. The language provides constructs intended to enable clear programs
    on both a small and large scale.
  doc_url: https://www.python.org/doc/versions/
  doc_source_url: https://github.com/python/pythondotorg/blob/master/docs/source/index.rst
  dev_url: https://docs.python.org/devguide/

extra:
  recipe-maintainers:
    - jakirkham
    - jjhelmus
    - mingwandroid
    - msarahan
    - pelson
    - ocefpaf
