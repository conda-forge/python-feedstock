From fb9d535290c32d9ff02820949cab3d2c212d6397 Mon Sep 17 00:00:00 2001
From: Isuru Fernando <isuruf@gmail.com>
Date: Mon, 25 Jan 2021 03:28:08 -0600
Subject: [PATCH 11/25] Make dyld search work with SYSTEM_VERSION_COMPAT=1

In macOS Big Sur, if the executable was compiled with `MACOSX_DEPLOYMENT_TARGET=10.15`
or below, then SYSTEM_VERSION_COMPAT=1 is the default which means that Big Sur
reports itself as 10.16 which means that `__builtin_available(macOS 11.0)` will not be triggered.

This can be observed by using the python 3.9.1 universal2 installer and using it on
x86_64 Big Sur or with Rossetta 2 on arm64 Big Sur. (Not an issue with native arm64
as that part is compiled with `MACOSX_DEPLOYMENT_TARGET=11.0`)

We also suppress a warning due to the mismatch between header using 11.0
and this code using 10.16
---
 Modules/_ctypes/callproc.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/Modules/_ctypes/callproc.c b/Modules/_ctypes/callproc.c
index 856b0376e5e..8d269ac5969 100644
--- a/Modules/_ctypes/callproc.c
+++ b/Modules/_ctypes/callproc.c
@@ -1509,7 +1509,7 @@ copy_com_pointer(PyObject *self, PyObject *args)
 #ifdef HAVE_DYLD_SHARED_CACHE_CONTAINS_PATH
 #  ifdef HAVE_BUILTIN_AVAILABLE
 #    define HAVE_DYLD_SHARED_CACHE_CONTAINS_PATH_RUNTIME \
-        __builtin_available(macOS 11.0, iOS 14.0, tvOS 14.0, watchOS 7.0, *)
+        __builtin_available(macOS 10.16, iOS 14.0, tvOS 14.0, watchOS 7.0, *)
 #  else
 #    define HAVE_DYLD_SHARED_CACHE_CONTAINS_PATH_RUNTIME \
          (_dyld_shared_cache_contains_path != NULL)
@@ -1552,8 +1552,10 @@ static PyObject *py_dyld_shared_cache_contains_path(PyObject *self, PyObject *ar
          if (PyUnicode_FSConverter(name, &name2) == 0)
              return NULL;
          name_str = PyBytes_AS_STRING(name2);
-
+#pragma clang diagnostic push
+#pragma clang diagnostic ignored "-Wunguarded-availability-new"
          r = _dyld_shared_cache_contains_path(name_str);
+#pragma clang diagnostic pop
          Py_DECREF(name2);
 
          if (r) {
